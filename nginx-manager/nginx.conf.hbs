worker_processes  5;  ## Default: 1
error_log  stderr;
worker_rlimit_nofile 8192;
daemon off; # So node can hold on to this process and control it.

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  {{#if https}}
    ssl_certificate {{certPath}};
    ssl_certificate_key {{keyPath}};

    # performance enhancement for SSL
    ssl_stapling on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # Disable all weak ciphers
    ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
    # enables TLSv1.0, 1.1, and 1.2 but not SSLv2 or 3 as they are both weak and
    # deprecated.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # Specifies that server ciphers should be preferred over client (e.g.
    # browser) ciphers when using SSL/TLS.
    ssl_prefer_server_ciphers on;

    # config to enable HSTS(HTTP Strict Transport Security)
    # https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    add_header Strict-Transport-Security "max-age=31536000;";
  {{/if}}

  {{#each upstreams}}
    upstream {{name}} {
      ip_hash;
      {{#each servers}}
        server {{address}};
      {{/each}}
    }
  {{/each}}

  # magnanimous control server
  server {
    listen 8090;
    location / {
      proxy_pass http://127.0.0.1:8888;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }

  # default server... if nothing else matches, return 503
  server {
    listen {{nginxPort}} {{#if https}}ssl{{/if}};
    location / {
      return 503;
    }
  }

  {{#each domains}}
    server {
      listen {{../nginxPort}} {{#if ../https}}ssl{{/if}};
      server_name {{hostname}};

      location / {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://{{name}}/;
        proxy_redirect off;

        # Handle Web Socket connections
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
      }
    }
  {{/each}}
}
